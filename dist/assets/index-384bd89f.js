var E=Object.defineProperty;var S=(s,e,t)=>e in s?E(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var a=(s,e,t)=>(S(s,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const y=function(s){return new Promise(e=>{const t=new Image;t.addEventListener("load",()=>{e(t)}),t.src=s})},v=async function(s){return fetch(`/@levels/${s}.json`).then(e=>e.json())};class g{constructor(e,t,r){a(this,"image");a(this,"width");a(this,"height");a(this,"tiles");this.image=e,this.width=t,this.height=r,this.tiles=new Map}define(e,t,r,n,i){var c;const o=document.createElement("canvas");o.width=n,o.height=i,(c=o.getContext("2d"))==null||c.drawImage(this.image,t,r,n,i,0,0,n,i),this.tiles.set(e,o)}defineTile(e,t,r){this.define(e,t*this.width,r*this.height,this.width,this.height)}draw(e,t,r,n){const i=this.tiles.get(e);t.drawImage(i,r,n)}drawTile(e,t,r,n){this.draw(e,t,r*this.width,n*this.height)}}const T="/assets/tiles-1dcaf0e0.png",k="/assets/characters-802da64a.gif",m={tiles:T,characters:k},u=16,h={sky:{X:3,Y:23},ground:{X:0,Y:0},mario:{X:276,Y:44}},p={X:64,Y:206},L=2e3,M=!0,I=!1,x={SPACE:32},A=async function(){const s=await y(m.characters),e=new g(s,u,u),t=h.mario;return e.define("mario",t.X,t.Y,16,16),e},P=async function(){const s=await y(m.tiles),e=new g(s,u,u),t=h.ground;e.defineTile("ground",t.X,t.Y);const r=h.sky;return e.defineTile("sky",r.X,r.Y),e};class Y{constructor(){a(this,"layers");this.layers=[]}draw(e){this.layers.forEach(t=>{t(e)})}}const b=function(s,e,t){s.ranges.forEach(([r,n,i,o])=>{for(let c=r;c<n;c++)for(let d=i;d<o;d++)t.drawTile(s.tile,e,c,d)})},C=function(s,e){const t=document.createElement("canvas");return t.width=640,t.height=256,s.forEach(n=>{const i=t.getContext("2d");b(n,i,e)}),function(n){n.drawImage(t,0,0)}},N=function(s){return function(t){s.draw(t)}};class f{constructor(e,t){a(this,"x");a(this,"y");this.set(e,t)}set(e,t){this.x=e,this.y=t}}class w{constructor(e){a(this,"NAME");this.NAME=e}update(e,t){}}class O{constructor(){a(this,"pos");a(this,"vel");a(this,"traits");a(this,"draw");this.pos=new f(0,0),this.vel=new f(0,0),this.traits=[]}addTrait(e){this.traits.push(e),this[e.NAME]=e}update(e){this.traits.forEach(t=>{t.update(this,e)})}}class X extends w{constructor(){super("jump");a(this,"duration");a(this,"velocity");a(this,"engageTime");this.duration=.5,this.velocity=200,this.engageTime=0}start(){this.engageTime=this.duration}cancel(){this.engageTime=0}update(t,r){this.engageTime>0&&(t.vel.y=-this.velocity,this.engageTime-=r)}}class j extends w{constructor(){super("velocity")}update(e,t){e.pos.x+=e.vel.x*t,e.pos.y+=e.vel.y*t}}const B=async function(){const s=await A(),e=new O;return e.addTrait(new j),e.addTrait(new X),e.draw=function(r){s.draw("mario",r,this.pos.x,this.pos.y)},e};class _{constructor(e=1/60){a(this,"update");a(this,"updateProxy");let t=0,r=0;this.updateProxy=n=>{for(t+=(n-r)/1e3;t>e;)this.update(e),t-=e;r=n,this.enqueue()}}enqueue(){requestAnimationFrame(this.updateProxy)}start(){this.enqueue()}}class q{constructor(){a(this,"keyStates");a(this,"keyMap");this.keyStates=new Map,this.keyMap=new Map}addMapping(e,t){this.keyMap.set(e,t)}handleEvent(e){const{keyCode:t}=e;if(!this.keyMap.has(t))return;const r=e.type==="keydown"?M:I;this.keyStates.get(t)!==r&&(this.keyStates.set(t,r),console.log(this.keyStates),this.keyMap.get(t)(r))}listenTo(e){["keydown","keyup"].forEach(r=>{e.addEventListener(r,n=>{this.handleEvent(n)})})}}const R=document.getElementById("screen"),K=R.getContext("2d");Promise.all([B(),P(),v("1-1")]).then(([s,e,t])=>{const r=new Y,n=C(t.backgrounds,e);r.layers.push(n),s.pos.set(p.X,p.Y);const i=new q;i.addMapping(x.SPACE,d=>{s.jump&&s.jump.start()}),i.listenTo(window);const o=N(s);r.layers.push(o);const c=new _;c.update=function(l){s.update(l),r.draw(K),s.vel.y+=L*l},c.start()});
