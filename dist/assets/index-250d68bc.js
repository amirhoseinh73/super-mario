var w=Object.defineProperty;var I=(s,t,e)=>t in s?w(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var i=(s,t,e)=>(I(s,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function e(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(r){if(r.ep)return;r.ep=!0;const o=e(r);fetch(r.href,o)}})();const y=function(s){return new Promise(t=>{const e=new Image;e.addEventListener("load",()=>{t(e)}),e.src=s})},L=async function(s){return fetch(`/@levels/${s}.json`).then(t=>t.json())};class g{constructor(t,e,n){i(this,"image");i(this,"width");i(this,"height");i(this,"tiles");this.image=t,this.width=e,this.height=n,this.tiles=new Map}define(t,e,n,r,o){var a;const c=document.createElement("canvas");c.width=r,c.height=o,(a=c.getContext("2d"))==null||a.drawImage(this.image,e,n,r,o,0,0,r,o),this.tiles.set(t,c)}defineTile(t,e,n){this.define(t,e*this.width,n*this.height,this.width,this.height)}draw(t,e,n,r){const o=this.tiles.get(t);e.drawImage(o,n,r)}drawTile(t,e,n,r){this.draw(t,e,n*this.width,r*this.height)}}const v="/assets/tiles-1dcaf0e0.png",E="/assets/characters-802da64a.gif",m={tiles:v,characters:E},d=16,l={sky:{X:3,Y:23},ground:{X:0,Y:0},mario:{X:276,Y:44}},h={X:64,Y:206},f={X:200,Y:-600},x=30,S=async function(){const s=await y(m.characters),t=new g(s,d,d),e=l.mario;return t.define("mario",e.X,e.Y,16,16),t},T=async function(){const s=await y(m.tiles),t=new g(s,d,d),e=l.ground;t.defineTile("ground",e.X,e.Y);const n=l.sky;return t.defineTile("sky",n.X,n.Y),t};class Y{constructor(){i(this,"layers");this.layers=[]}draw(t){this.layers.forEach(e=>{e(t)})}}const P=function(s,t,e){s.ranges.forEach(([n,r,o,c])=>{for(let a=n;a<r;a++)for(let u=o;u<c;u++)e.drawTile(s.tile,t,a,u)})},X=function(s,t){const e=document.createElement("canvas");return e.width=640,e.height=256,s.forEach(r=>{const o=e.getContext("2d");P(r,o,t)}),function(r){r.drawImage(e,0,0)}},M=function(s){return function(e){s.draw(e)}};class p{constructor(t,e){i(this,"x");i(this,"y");this.set(t,e)}set(t,e){this.x=t,this.y=e}}class O{constructor(){i(this,"position");i(this,"velocity");i(this,"draw");i(this,"update");this.position=new p(0,0),this.velocity=new p(0,0)}}const b=async function(){const s=await S(),t=new O;return t.draw=function(n){s.draw("mario",n,this.position.x,this.position.y)},t.update=function(n){this.position.x+=this.velocity.x*n,this.position.y+=this.velocity.y*n},t};class A{constructor(t=1/60){i(this,"update");i(this,"updateProxy");let e=0,n=0;this.updateProxy=r=>{for(e+=(r-n)/1e3;e>t;)this.update(t),e-=t;n=r,this.enqueue()}}enqueue(){requestAnimationFrame(this.updateProxy)}start(){this.enqueue()}}const B=document.getElementById("screen"),C=B.getContext("2d");Promise.all([b(),T(),L("1-1")]).then(([s,t,e])=>{const n=new Y,r=X(e.backgrounds,t);n.layers.push(r),s.position.set(h.X,h.Y),s.velocity.set(f.X,f.Y);const o=M(s);n.layers.push(o);const c=new A;c.update=function(u){n.draw(C),s.update(u),s.velocity.y+=x},c.start()});
